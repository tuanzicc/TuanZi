@using System;
@using System.Linq
@using TuanZi.CodeGeneration.Schema;
@{
    EntityMetadata entity = Model;
    string keyType = TypeHelper.ToSingleTypeName(entity.PrimaryKeyTypeFullName);
}
// -----------------------------------------------------------------------
//  <copyright file="@(entity.Name)OutputDto.cs" company="@entity.Module.Project.Company">
//      @entity.Module.Project.Copyright
//  </copyright>
//  <site>@entity.Module.Project.SiteUrl</site>
//  <last-editor>@entity.Module.Project.Creator</last-editor>
//  <last-date>@DateTime.Now.ToString("yyyy/MM/dd HH:mm")</last-date>
// -----------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

using TuanZi.Entity;
using TuanZi.Mapping;

using @(entity.Module.Namespace).Entities;

namespace @(entity.Module.Namespace).Dtos
{
    /// &lt;summary&gt;
    /// 输入DTO：@(entity.Display)信息
    /// &lt;/summary&gt;
    [MapFrom(typeof(@(entity.Name)))]
    [Description("(entity.Display)信息")]
    public class @(entity.Name)OutputDto : IOutputDto@{
if(entity.IsDataAuth)
{
<text>, IDataAuthEnabled
</text>
}
    }
    {
        /// &lt;summary&gt;
        /// 获取或设置 编号
        /// &lt;/summary&gt;
        [DisplayName("编号")]
        public @(keyType) Id { get; set; }
@foreach (PropertyMetadata prop in entity.Properties.Where(m => m.IsOutputDto))
{
    <text>
        /// &lt;summary&gt;
        /// 获取或设置 @(prop.Display)
        /// &lt;/summary&gt;
        [DisplayName("@(prop.Display)")]
        public bool @prop.Name { get; set; }
    </text>
}
@if(entity.IsDataAuth)
{
    <text>
        /// <summary>
        /// 获取或设置 是否可更新的数据权限状态
        /// </summary>
        public bool Updatable { get; set; }

        /// <summary>
        /// 获取或设置 是否可删除的数据权限状态
        /// </summary>
        public bool Deletable { get; set; }
    </text>
}
    }
}